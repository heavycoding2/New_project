// src/CardDetailsForm.js
import React, { useState } from 'react';


function CardDetailsForm() {
  const [formData, setFormData] = useState({
    cardNumber: '',
    expiryDate: '',
    cvc: '',
  });

  const [errors, setErrors] = useState({});

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    const validationErrors = validateForm(formData);
    if (Object.keys(validationErrors).length === 0) {
      // Form is valid, you can update card details or submit to the server here
      console.log('Form data:', formData);
    } else {
      // Form has errors, display them
      setErrors(validationErrors);
    }
  };

  const validateForm = (data) => {
    const errors = {};
    // Validation logic
    if (!data.cardNumber) {
      errors.cardNumber = 'Card number is required';
    } else if (!isValidCardNumber(data.cardNumber)) {
      errors.cardNumber = 'Invalid card number';
    }

    if (!data.expiryDate) {
      errors.expiryDate = 'Expiry date is required';
    } else if (!isValidExpiryDate(data.expiryDate)) {
      errors.expiryDate = 'Invalid expiry date';
    }

    if (!data.cvc) {
      errors.cvc = 'CVC is required';
    } else if (!isValidCVC(data.cvc)) {
      errors.cvc = 'Invalid CVC';
    }

    return errors;
  };

  const isValidCardNumber = (cardNumber) => {
    // Validation logic for card number (e.g., regex or library)
    // For simplicity, assuming a 16-digit number is valid
    return /^\d{16}$/.test(cardNumber);
  };

  const isValidExpiryDate = (expiryDate) => {
    // Validation logic for expiry date (e.g., regex or library)
    // For simplicity, assuming MM/YY format is valid
    return /^(0[1-9]|1[0-2])\/\d{2}$/.test(expiryDate);
  };

  const isValidCVC = (cvc) => {
    // Validation logic for CVC (e.g., regex or length check)
    // For simplicity, assuming a 3 or 4-digit number is valid
    return /^\d{3,4}$/.test(cvc);
  };

  return (
    <div>
      <form onSubmit={handleSubmit}>
        <div>
          <label>Card Number:</label>
          <input
            type="text"
            name="cardNumber"
            value={formData.cardNumber}
            onChange={handleChange}
          />
          {errors.cardNumber && <p className="error">{errors.cardNumber}</p>}
        </div>
        <div>
          <label>Expiry Date:</label>
          <input
            type="text"
            name="expiryDate"
            value={formData.expiryDate}
            onChange={handleChange}
          />
          {errors.expiryDate && <p className="error">{errors.expiryDate}</p>}
        </div>
        <div>
          <label>CVC:</label>
          <input
            type="text"
            name="cvc"
            value={formData.cvc}
            onChange={handleChange}
          />
          {errors.cvc && <p className="error">{errors.cvc}</p>}
        </div>
        <button type="submit">Submit</button>
      </form>
    </div>
  );
}

export default CardDetailsForm;
